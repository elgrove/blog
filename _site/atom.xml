<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Colorie</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2021-11-28T17:41:37+00:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name>Colorie</name>
   <email></email>
 </author>

 
 <entry>
   <title>Torstack: automated torrenting behind a VPN</title>
   <link href="http://localhost:4000/2021/06/17/torrent-stack"/>
   <updated>2021-06-17T00:00:00+01:00</updated>
   <id>http://localhost:4000/2021/06/17/torrent-stack</id>
   <content type="html">&lt;p&gt;Sonarr - automated TV downloading
Radarr - automated movie downloading
Jackett - proxy for torrent searches
Haugene - legendary openvpn+transmission container&lt;/p&gt;

&lt;p&gt;Docker compose file:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;version: '3.3'
services:
    haugene:
        container_name: haugene
        cap_add:
            - NET_ADMIN
        volumes:
            - /home/user/torrents:/data
            - ./haugene:/config
        environment:
            - PUID=1000
            - PGID=1000
            - OPENVPN_PROVIDER=NORDVPN
            - &quot;OPENVPN_USERNAME=EMAIL&quot;
            - &quot;OPENVPN_PASSWORD=PASSWORD&quot;
            - LOCAL_NETWORK=10.0.0.0/8
        logging:
            driver: json-file
            options:
                max-size: 10m
        ports:
            - '9091:9091'
            - '9117:9117'
            - '8989:8989'
            - '7878:7878'
        image: haugene/transmission-openvpn
        restart: unless-stopped
    jackett:
        image: ghcr.io/linuxserver/jackett
        container_name: jackett
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=Europe/London
        volumes:
            - ./jackett:/config
            - /home/user/torrents:/downloads
        network_mode: service:haugene
        depends_on:
            - haugene
        restart: unless-stopped
    sonarr:
        image: ghcr.io/linuxserver/sonarr
        container_name: sonarr
        environment:
        - PUID=1000
        - PGID=1000
        - TZ=Europe/London
        volumes:
        - ./sonarr:/config
        - /mnt/main/media/tv:/tv #optional
        - /home/user/torrents:/data #optional
        network_mode: service:haugene
        depends_on:
            - haugene
        restart: unless-stopped
    radarr:
        image: ghcr.io/linuxserver/radarr
        container_name: radarr
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=Europe/London
        volumes:
            - ./radarr:/config
            - /mnt/main/media/movies:/movies #optional
            - /home/user/torrents:/data #optional
        network_mode: service:haugene
        depends_on:
            - haugene
        restart: unless-stopped
networks:
    default:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Setting up a Ruby dev environment for Jekyll</title>
   <link href="http://localhost:4000/2021/06/01/ruby-env-jekyll"/>
   <updated>2021-06-01T00:00:00+01:00</updated>
   <id>http://localhost:4000/2021/06/01/ruby-env-jekyll</id>
   <content type="html">&lt;p&gt;Download with Brew&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;ruby rbenv
rbenv init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add to .zshrc&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/usr/local/opt/ruby/bin:/usr/local/lib/ruby/gems/3.0.0/bin:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;rbenv init - zsh&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GEM_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;ruby &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'puts Gem.user_dir'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$GEM_HOME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/bin&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install bundler jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll new sitename
cd myblog
bundle exec jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;localhost:4000&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Accessing my self-hosted services away from home with WireGuard</title>
   <link href="http://localhost:4000/2021/05/08/wireguard"/>
   <updated>2021-05-08T00:00:00+01:00</updated>
   <id>http://localhost:4000/2021/05/08/wireguard</id>
   <content type="html">&lt;p&gt;https://github.com/angristan/wireguard-install&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -O https://raw.githubusercontent.com/angristan/wireguard-install/master/wireguard-install.sh
chmod +x wireguard-install.sh
./wireguard-install.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Run the script, enter the public IP for the server and leave everything else as default. Note the port it auto assigns.&lt;/p&gt;

&lt;p&gt;Script will prompt to add the client name&lt;/p&gt;

&lt;p&gt;Open the port to the internet, in my case on a TP-Link Archer router it was under a section called virtual servers&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Replace a string in all filenames in a folder</title>
   <link href="http://localhost:4000/2021/04/28/bash-replace-string"/>
   <updated>2021-04-28T00:00:00+01:00</updated>
   <id>http://localhost:4000/2021/04/28/bash-replace-string</id>
   <content type="html">&lt;p&gt;As below will replace S01 with S02 in all files in the dir that contain S01&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;file &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;S01&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mv&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/S01/S02&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Upgrading my Python workflow with black, flake8 and pre-commit</title>
   <link href="http://localhost:4000/2021/04/04/python-workflow"/>
   <updated>2021-04-04T00:00:00+01:00</updated>
   <id>http://localhost:4000/2021/04/04/python-workflow</id>
   <content type="html">&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# install
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;commit&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# generate sample config yaml
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yaml&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# install black
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipenv&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;black&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# add to precommit config
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;psf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;black&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;21.6&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hooks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;black&lt;/span&gt;
      

&lt;span class=&quot;c1&quot;&gt;# install black
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipenv&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flake8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# decide that flake8 is shit and abandon it
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Self-hosting a notes app on my own subdomain</title>
   <link href="http://localhost:4000/2021/03/08/self-hosted-notes"/>
   <updated>2021-03-08T00:00:00+00:00</updated>
   <id>http://localhost:4000/2021/03/08/self-hosted-notes</id>
   <content type="html">&lt;p&gt;First I bought my domain from Google Domains for £10 a year, then signed up for Cloudflare free tier and set up DNS rules for root and WWW&lt;/p&gt;

&lt;p&gt;Set up docker-compose on Linode&lt;/p&gt;

&lt;p&gt;Set up SWAG container from LSIO, with Bookstack&lt;/p&gt;

&lt;p&gt;Un-grey out proxy confs for the site required, most lsio containers are already in there. Change the subdomain where required.&lt;/p&gt;

&lt;p&gt;Set up DNS rules for notes subdomain to the root IP address, the reverse proxy will catch the request to the root IP and forward it to the subdomain&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2.1&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;swag&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ghcr.io/linuxserver/swag&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;swag&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;cap_add&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;NET_ADMIN&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PUID=1000&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PGID=1000&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;TZ=Europe/London&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;URL=elgrove.xyz&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;SUBDOMAINS=www,notes&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;VALIDATION=dns&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;DNSPLUGIN=cloudflare&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;EMAIL=aaronlovegrove@protonmail.com&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./config:/config&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;443:443&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;80:80&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unless-stopped&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;bookstack&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ghcr.io/linuxserver/bookstack&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bookstack&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PUID=1000&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PGID=1000&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;APP_URL=https://notes.elgrove.xyz&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;DB_HOST=bookstack_db&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;DB_USER=bookstack&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;DB_PASS=1111&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;DB_DATABASE=bookstackapp&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./bookstack:/config&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;6875:80&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unless-stopped&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bookstack_db&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;bookstack_db&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ghcr.io/linuxserver/mariadb&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bookstack_db&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PUID=1000&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PGID=1000&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_ROOT_PASSWORD=1111&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;TZ=Europe/London&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_DATABASE=bookstackapp&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_USER=bookstack&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_PASSWORD=1111&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./bookstack/db:/config&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unless-stopped&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>How to write an /etc/fstab entry</title>
   <link href="http://localhost:4000/2021/03/05/fstab-entry"/>
   <updated>2021-03-05T00:00:00+00:00</updated>
   <id>http://localhost:4000/2021/03/05/fstab-entry</id>
   <content type="html">&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/dev/disk/by-uuid/d6b188f9-8aaf-4a23-b7b5-0e0a054dd576 /mnt/folder ext4 defaults 0 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Setting up WSL to sidestep a corporate network</title>
   <link href="http://localhost:4000/2021/03/02/wsl-coporate-network"/>
   <updated>2021-03-02T00:00:00+00:00</updated>
   <id>http://localhost:4000/2021/03/02/wsl-coporate-network</id>
   <content type="html">&lt;p&gt;WSL2 refuses to check the SSL certificates of any download locations, e.g. apt, pypi, github, vs code server, when on a corporate network&lt;/p&gt;

&lt;p&gt;The only way to sidestep this as a permanent fix is to disable SSL checks on utilities that need to perform these downloads&lt;/p&gt;

&lt;p&gt;In the case of VS Code server, create the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.wgetrc&lt;/code&gt; and add the following line&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;check_certificate = off
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For Apt, create the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.curlrc&lt;/code&gt; and add the following line&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;insecure
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And for PyPi, create the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.config/pip/pip.conf&lt;/code&gt; and add the folloiwng line&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[global]
trusted-host = pypi.python.org
               pypi.org
               files.pythonhosted.org
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And for GitHub, run the below config command:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config --global http.sslverify false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;All done. Insecure as hell, but it works!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Podgrab: self-hosted podcast downloader</title>
   <link href="http://localhost:4000/2021/02/21/podgrab"/>
   <updated>2021-02-21T00:00:00+00:00</updated>
   <id>http://localhost:4000/2021/02/21/podgrab</id>
   <content type="html">&lt;p&gt;Download episodes whenever new podcast added - yes&lt;br /&gt;
How many episodes - 40&lt;br /&gt;
Automatically download to disk - yes&lt;br /&gt;
Append episode date to file name - yes&lt;br /&gt;
Append episode number to file name - no&lt;br /&gt;
Download image - yes&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2.1&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;podgrab&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;akhilrex/podgrab&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;container_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;podgrab&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;CHECK_FREQUENCY=240&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PUID=1000&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;PGID=1000&lt;/span&gt;
     &lt;span class=&quot;c1&quot;&gt;# - PASSWORD=password     ## Uncomment to enable auth, username = podgrab&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./config:/config&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/mnt/main/media/podcasts:/assets&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;8080:8080&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unless-stopped&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Syncing files with rsync</title>
   <link href="http://localhost:4000/2021/01/12/rsync"/>
   <updated>2021-01-12T00:00:00+00:00</updated>
   <id>http://localhost:4000/2021/01/12/rsync</id>
   <content type="html">&lt;p&gt;The following will sync the contents of dir1 into dir2&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rsync -avP --ignore-existing dir1/ dir2/

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note the trailing slash which means the &lt;em&gt;contents&lt;/em&gt; of dir1, without this you move the whole folder dir1 inside of dir2&lt;/p&gt;

&lt;p&gt;On the above command, the flags are:&lt;/p&gt;

&lt;p&gt;-a means archive or sync&lt;br /&gt;
-P can be very helpful. It combines the flags –progress (progress bar) and –partial (allows to resume if stopped)&lt;br /&gt;
-n can be used for a dry run&lt;/p&gt;

&lt;p&gt;For syncing files, rather than copying outright, add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--ignore-existing&lt;/code&gt; as the last flag, before dir1&lt;/p&gt;

&lt;p&gt;It’s also really handy for deleting folders containing many, many tiny files, faster than &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rm&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For this purpose, use the following commands&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir empty_dir
rsync -a --delete empty_dir/    delete_dir/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Installing 64-bit Ubuntu 20.04 on a Raspberry Pi</title>
   <link href="http://localhost:4000/2021/01/01/ubuntu-rpi"/>
   <updated>2021-01-01T00:00:00+00:00</updated>
   <id>http://localhost:4000/2021/01/01/ubuntu-rpi</id>
   <content type="html">&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wifis:
    wlan0:
        dhcp4: true
        optional: true
        access-points:
            &quot;SSID&quot;:
                password: &quot;PASS&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt install bluez pi-bluetooth

sudo reboot nowreboot

bluetoothctl

discoverable on
scan on 
pair 00:11:22:33:44:55
connect 00:11:22:33:44:55
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Using tar to zip and unzip a directory</title>
   <link href="http://localhost:4000/2020/12/20/tar"/>
   <updated>2020-12-20T00:00:00+00:00</updated>
   <id>http://localhost:4000/2020/12/20/tar</id>
   <content type="html">&lt;p&gt;archive a directory as a tar:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar -cvf directory.tar directory/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;add -z to compress with gzip&lt;/p&gt;

&lt;p&gt;unarchive:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar -xvf directory.tar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;add -z if compressed&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Trying out Pyenv for Python version management</title>
   <link href="http://localhost:4000/2020/12/13/pyenv"/>
   <updated>2020-12-13T00:00:00+00:00</updated>
   <id>http://localhost:4000/2020/12/13/pyenv</id>
   <content type="html">&lt;p&gt;https://github.com/pyenv/pyenv#installation&lt;/p&gt;

&lt;p&gt;https://github.com/pyenv/pyenv-installer&lt;/p&gt;

&lt;p&gt;https://github.com/momo-lab/pyenv-install-latest&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get update; sudo apt-get install make build-essential libssl-dev zlib1g-dev \
libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl https://pyenv.run | bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo -e 'if shopt -q login_shell; then' \
      '\n  export PYENV_ROOT=&quot;$HOME/.pyenv&quot;' \
      '\n  export PATH=&quot;$PYENV_ROOT/bin:$PATH&quot;' \
      '\n eval &quot;$(pyenv init --path)&quot;' \
      '\nfi' &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo -e 'if [ -z &quot;$BASH_VERSION&quot; ]; then'\
      '\n  export PYENV_ROOT=&quot;$HOME/.pyenv&quot;'\
      '\n  export PATH=&quot;$PYENV_ROOT/bin:$PATH&quot;'\
      '\n  eval &quot;$(pyenv init --path)&quot;'\
      '\nfi' &amp;gt;&amp;gt;~/.profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;https://github.com/pyenv/pyenv/wiki#suggested-build-environment&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get update; sudo apt-get install make build-essential libssl-dev zlib1g-dev \
libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv install-latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv versions
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv global 3.9.5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>SSH file transfer with scp</title>
   <link href="http://localhost:4000/2020/11/01/scp"/>
   <updated>2020-11-01T00:00:00+00:00</updated>
   <id>http://localhost:4000/2020/11/01/scp</id>
   <content type="html">&lt;p&gt;scp or secure copy is a *nix utility for copying files over an SSH connection. The commands are pretty simple and I haven’t needed to use any switches yet. Classic unix, doing one job and doing it very well.&lt;/p&gt;

&lt;p&gt;To copy a local file to a remote machine:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scp /path/to/file username@server:/path/t
o/destination
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And to copy a remote file to a local directory:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scp username@server:/path/to/file /path/to/destination
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Add a user to a group on Linux</title>
   <link href="http://localhost:4000/2020/09/22/add-to-group"/>
   <updated>2020-09-22T00:00:00+01:00</updated>
   <id>http://localhost:4000/2020/09/22/add-to-group</id>
   <content type="html">&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;usermod &lt;span class=&quot;nt&quot;&gt;-aG&lt;/span&gt; group usertoadd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Make a script executable on Linux</title>
   <link href="http://localhost:4000/2020/07/28/script-executable"/>
   <updated>2020-07-28T00:00:00+01:00</updated>
   <id>http://localhost:4000/2020/07/28/script-executable</id>
   <content type="html">&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo chmod&lt;/span&gt; +x file.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Using sed to replace text in a file</title>
   <link href="http://localhost:4000/2020/07/14/sed"/>
   <updated>2020-07-14T00:00:00+01:00</updated>
   <id>http://localhost:4000/2020/07/14/sed</id>
   <content type="html">&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sed -i 's/old-text/new-text/g' file.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Change owner of a folder or subfolders on Linux</title>
   <link href="http://localhost:4000/2020/06/28/change-owner-copy"/>
   <updated>2020-06-28T00:00:00+01:00</updated>
   <id>http://localhost:4000/2020/06/28/change-owner copy</id>
   <content type="html">&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo chown&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; user:group /path/to/folder
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Setting up a Windows 10 VM on Proxmox</title>
   <link href="http://localhost:4000/2020/06/14/windows-10-vm"/>
   <updated>2020-06-14T00:00:00+01:00</updated>
   <id>http://localhost:4000/2020/06/14/windows-10-vm</id>
   <content type="html">&lt;p&gt;Proxmox makes it very easy to set up Linux VMs, but to do the same for Windows 10, unfortunately you have to jump through a few hoops.&lt;/p&gt;

&lt;p&gt;Firstly, procure your Windows 10 ISO. I prefer the LTSC channel, but it doesn’t have the Windows Subsystem for Linux version 2 yet, which is a damn shame. LTSC does away with all the commercial nonsense that Microsoft have added to the Home and Pro versions of Windows 10, like Candy Crush for example. If you want to be able to use WSL2, you will have to obtain an ISO for Windows 10 Pro.&lt;/p&gt;

&lt;p&gt;Once you’ve uploaded the ISO to Proxmox, you can begin creating a new VM.&lt;/p&gt;

&lt;p&gt;In the first screen, name your VM and give it a unique numerical ID as usual. In the OS tab, select the Windows ISO that you uploaded and change the guest OS type to ‘Windows 10/2016/2019’&lt;/p&gt;

&lt;p&gt;Moving on to the hard disk tab, change the bus to SCSI and set VirtIO SCSI as the controller. For the cache, Proxmox recommends using ‘write back’ for best performance, but the default, no cache, is safer, with the trade-off that it is slower.&lt;/p&gt;

&lt;p&gt;No changes needed in the CPU tab, though I would recommend assigning at least 2 virtual CPUs to Windows. Same in the memory tab, just assign your memory size as usual. Lastly, select ‘VirtIO (paravirtualized)’ as the network device. Confirm the setup of the VM and make sure that ‘start after creation’ is unticked.&lt;/p&gt;

&lt;p&gt;Before booting up the VM, you will need to add another disk to the VM that contains the VirtIO drivers needed for Windows to recognise the virtual drives, memory and network device. I usually grab the disk image containing these drivers from the GitHub page here: https://github.com/virtio-win. Upload this ISO to your Proxmox server, locate the Windows VM you just created and add the ISO as another CD/DVD drive just as the Windows 10 ISO is.&lt;/p&gt;

&lt;p&gt;Boot up the Windows VM and open the noVNC console window. If you’ve ever installed Windows 10 before you will be familiar with this particular shade of purple. Click through to the page where you need to select the drive to install Windows 10 on, and click ‘load driver’. Unfortunately you are going to have to do this one driver at a time. Firstly, the hard disk, browse to the VirtIO ISO and navigate to the folder vioscsi/w10/amd64 (assuming you are installing on an x86 box) and click confirm. Windows should have recognised your ‘Red Hat VirtIO SCSI passthrough controller’. The virtual hard drive should now appear, but don’t install on it yet. Next, for the network device, navigate to NetKVM/w10/amd64 and click confirm as before. Lastly, for the memory device, navigate to Balloon/w10/amd64 and proceed.&lt;/p&gt;

&lt;p&gt;Now all the relevant drivers have been installed you can go ahead with the install to the VM’s virtual hard drive. Everything else from this point is the usual process of doing a fresh Windows 10 install, including opting out of all the telemetry and other rubbish!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>LAN Speed Testing with iperf</title>
   <link href="http://localhost:4000/2020/06/12/lan-speed-testing"/>
   <updated>2020-06-12T00:00:00+01:00</updated>
   <id>http://localhost:4000/2020/06/12/lan-speed-testing</id>
   <content type="html">&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iperf&lt;/code&gt; is a command line tool for *nix machines that can set up a server-client connection over the LAN to transfer as much data as possible in ten seconds flat, and thus measure the speed of the connection.&lt;/p&gt;

&lt;p&gt;Using this tool I found out that my 5GHz wifi band (370Mbps) is three times faster than the TP-Link powerline tool (93Mbps) I had been using previously, and a massive 23x faster than the 2.4GHz band (16Mbps)!&lt;/p&gt;

&lt;p&gt;I think this is in large part due to the TP-Link Archer C2300 router I bought when we moved in, it was only £90 and is a huge upgrade on whatever your ISP gave you.&lt;/p&gt;

&lt;p&gt;```bash&lt;/p&gt;
&lt;h1 id=&quot;linux&quot;&gt;linux&lt;/h1&gt;
&lt;p&gt;sudo apt install iperf&lt;/p&gt;
&lt;h1 id=&quot;macos&quot;&gt;macos&lt;/h1&gt;
&lt;p&gt;brew install iperf&lt;/p&gt;

&lt;h1 id=&quot;on-server&quot;&gt;on server&lt;/h1&gt;
&lt;p&gt;iperf -s&lt;/p&gt;

&lt;h1 id=&quot;on-client&quot;&gt;on client&lt;/h1&gt;
&lt;p&gt;iperf -c 10.0.0.x -p port&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Setting up a Proxmox VM server</title>
   <link href="http://localhost:4000/2020/05/09/proxmox-setup"/>
   <updated>2020-05-09T00:00:00+01:00</updated>
   <id>http://localhost:4000/2020/05/09/proxmox-setup</id>
   <content type="html">&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget https://raw.githubusercontent.com/Weilbyte/PVEDiscordDark/master/PVEDiscordDark.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash PVEDiscordDark.sh &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt;.backup &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;s/res === null || res === undefined || &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\!&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;res || res&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\t\t\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.data.status.toLowerCase() &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\!&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;== 'active'/false/g&quot;&lt;/span&gt; /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; systemctl restart pveproxy.service

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Editing the sshd config file</title>
   <link href="http://localhost:4000/2020/04/29/sshd-config"/>
   <updated>2020-04-29T00:00:00+01:00</updated>
   <id>http://localhost:4000/2020/04/29/sshd-config</id>
   <content type="html">&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo nano /etc/ssh/sshd_config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Switch password authentication on/off&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# To disable tunneled clear text passwords, change to no here!
PasswordAuthentication no 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To reload the daemon and apply changes&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl reload sshd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>See members of a group on Linux</title>
   <link href="http://localhost:4000/2020/04/12/members"/>
   <updated>2020-04-12T00:00:00+01:00</updated>
   <id>http://localhost:4000/2020/04/12/members</id>
   <content type="html">&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;members
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;members groupname
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</content>
 </entry>
 

</feed>
